@model get_rekt.Models.VideoModel

@{
    ViewBag.Title = "AddVideo";
}

<h2>AddVideo</h2>

@using (Html.BeginForm("FileUpload", "Video", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>VideoModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="email">Email</label>
            <div class="col-md-10">
                <input type="email" name="email">
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="pseudo">Pseudo</label>
            <div class="col-md-10">
                <input type="text" name="pseudo">
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Catégories</label>
            <div class="col-md-10">
                <select name="categorie">
                    @foreach(var item in ViewBag.categories)
                    {
                        <option value="@item.Id"> @item.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VideoLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="js-upload-files">Image (700x400)</label>
            <div class="col-md-10">
                    <div class="form-group">     
                            <input type="file" name="file" id="file"  multiple>
                    </div>
            </div>
        </div>
        

        <button type="submit" class="btn btn-default">Submit</button>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
